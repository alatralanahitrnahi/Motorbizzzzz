<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use App\Models\Barcode;
use App\Models\InventoryBatch;
use Illuminate\Support\Str;
use Carbon\Carbon;

class BarcodeSeeder extends Seeder
{
    public function run(): void
    {
        // We'll generate barcodes for existing active batches
        $batches = InventoryBatch::where('status', 'active')->get();

        foreach ($batches as $batch) {
            // Avoid duplicate barcodes for same batch
            $existing = Barcode::where('batch_id', $batch->id)->exists();
            if ($existing) {
                continue;
            }

            $barcodeNumber = Barcode::generateBarcodeNumber();

            $barcode = Barcode::create([
                'barcode_number' => $barcodeNumber,
                'batch_id' => $batch->id,
                'purchase_order_id' => $batch->purchase_order_id,
                'material_id' => $batch->material_id,
                'material_name' => optional($batch->material)->name,
                'material_code' => optional($batch->material)->code,
                'supplier_name' => $batch->purchaseOrder?->vendor?->name ?? 'No Supplier',
                'quantity' => $batch->current_quantity,
                'weight' => $batch->current_weight,
                'unit_price' => $batch->unit_price,
                'expiry_date' => $batch->expiry_date,
                'storage_location' => $batch->storage_location,
                'quality_grade' => $batch->quality_grade,
                'barcode_type' => 'standard',
                'status' => 'active',
                'notes' => 'Auto-generated by seeder',
                'created_at' => now(),
                'updated_at' => now(),
            ]);

            // Generate QR code data (if your model uses this method)
            $barcode->qr_code_data = $barcode->generateQRData();
            $barcode->save();
        }
    }
}
